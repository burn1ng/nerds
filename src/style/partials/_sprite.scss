// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$checkbox-checked-name: 'checkbox_checked';
$checkbox-checked-x: 0px;
$checkbox-checked-y: 0px;
$checkbox-checked-offset-x: 0px;
$checkbox-checked-offset-y: 0px;
$checkbox-checked-width: 20px;
$checkbox-checked-height: 20px;
$checkbox-checked-total-width: 56px;
$checkbox-checked-total-height: 37px;
$checkbox-checked-image: '../img/sprite.png';
$checkbox-checked: (0px, 0px, 0px, 0px, 20px, 20px, 56px, 37px, '../img/sprite.png', 'checkbox_checked', );
$checkbox-unchecked-name: 'checkbox_unchecked';
$checkbox-unchecked-x: 22px;
$checkbox-unchecked-y: 0px;
$checkbox-unchecked-offset-x: -22px;
$checkbox-unchecked-offset-y: 0px;
$checkbox-unchecked-width: 20px;
$checkbox-unchecked-height: 20px;
$checkbox-unchecked-total-width: 56px;
$checkbox-unchecked-total-height: 37px;
$checkbox-unchecked-image: '../img/sprite.png';
$checkbox-unchecked: (22px, 0px, -22px, 0px, 20px, 20px, 56px, 37px, '../img/sprite.png', 'checkbox_unchecked', );
$icon-basket-name: 'icon-basket';
$icon-basket-x: 17px;
$icon-basket-y: 22px;
$icon-basket-offset-x: -17px;
$icon-basket-offset-y: -22px;
$icon-basket-width: 16px;
$icon-basket-height: 13px;
$icon-basket-total-width: 56px;
$icon-basket-total-height: 37px;
$icon-basket-image: '../img/sprite.png';
$icon-basket: (17px, 22px, -17px, -22px, 16px, 13px, 56px, 37px, '../img/sprite.png', 'icon-basket', );
$icon-fb-name: 'icon-fb';
$icon-fb-x: 44px;
$icon-fb-y: 15px;
$icon-fb-offset-x: -44px;
$icon-fb-offset-y: -15px;
$icon-fb-width: 9px;
$icon-fb-height: 17px;
$icon-fb-total-width: 56px;
$icon-fb-total-height: 37px;
$icon-fb-image: '../img/sprite.png';
$icon-fb: (44px, 15px, -44px, -15px, 9px, 17px, 56px, 37px, '../img/sprite.png', 'icon-fb', );
$icon-insta-name: 'icon-insta';
$icon-insta-x: 0px;
$icon-insta-y: 22px;
$icon-insta-offset-x: 0px;
$icon-insta-offset-y: -22px;
$icon-insta-width: 15px;
$icon-insta-height: 15px;
$icon-insta-total-width: 56px;
$icon-insta-total-height: 37px;
$icon-insta-image: '../img/sprite.png';
$icon-insta: (0px, 22px, 0px, -22px, 15px, 15px, 56px, 37px, '../img/sprite.png', 'icon-insta', );
$icon-vk-name: 'icon-vk';
$icon-vk-x: 44px;
$icon-vk-y: 0px;
$icon-vk-offset-x: -44px;
$icon-vk-offset-y: 0px;
$icon-vk-width: 12px;
$icon-vk-height: 13px;
$icon-vk-total-width: 56px;
$icon-vk-total-height: 37px;
$icon-vk-image: '../img/sprite.png';
$icon-vk: (44px, 0px, -44px, 0px, 12px, 13px, 56px, 37px, '../img/sprite.png', 'icon-vk', );
$spritesheet-width: 56px;
$spritesheet-height: 37px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($checkbox-checked, $checkbox-unchecked, $icon-basket, $icon-fb, $icon-insta, $icon-vk, );
$spritesheet: (56px, 37px, '../img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
